# 数据库配置
spring.datasource.url=jdbc:mysql://:3306/blog?characterEncoding=UTF-8
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# 服务器端口
server.port=8082

# 这里在最后加多了一个/res/，则寻找静态资源的时候会到这里找。但是从相对路径上来讲，其实是../res/...css，即
# 在页面上使用的时候静态浏览需要有res，动态在服务器上浏览却需要res，怎么办呢？
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,\
  classpath:/static/,classpath:/public/
  #,classpath:/res/
# 就用这个配置为它增加了静态路径的前缀，即动态在容器中访问静态资源时原来localhost:8080/abc就能访问的资源变为
# localhost:8080/res/abc，这样服务器访问有res，静态访问也有res了。
# spring.mvc.static-path-pattern=/res/**

# debug=true

# THYMELEAF
spring.thymeleaf.encoding=UTF-8
# 热部署静态文件
spring.thymeleaf.cache=false
# 使用HTML5标准
spring.thymeleaf.mode=HTML


# mybatis推荐用这种方式配置，这种方式配置的通用性最好，并且也比较清晰
mybatis.config-location=classpath:mybatis/mybatis-config.xml
# 配置了这个就不用在mybatis-config.xml中写mappers的resource了，因为以前不知道去哪里找，现在知道去这儿找了。
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

# 上传文件的配置
spring.servlet.multipart.max-file-size=10Mb
spring.servlet.multipart.max-request-size=10Mb
